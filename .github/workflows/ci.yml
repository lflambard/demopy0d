name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize, ready_for_review]
  release:
    types: [published]
  workflow_dispatch:

env:
  MAIN_PYTHON_VERSION: "3.8"
  DOCUMENTATION_CNAME: 'thermalengine0d.docs.solutions.ansys.com'
  POETRY_VERSION: "1.3"
  TOX_VERSION: "3.27.1"
  POETRY_HTTP_BASIC_PYANSYS_PRIVATE_PYPI_USERNAME: 'PAT'
  POETRY_HTTP_BASIC_PYANSYS_PRIVATE_PYPI_PASSWORD: ${{ secrets.PYANSYS_PRIVATE_PYPI_PAT }}
  POETRY_HTTP_BASIC_SOLUTIONS_PRIVATE_PYPI_USERNAME: 'PAT'
  POETRY_HTTP_BASIC_SOLUTIONS_PRIVATE_PYPI_PASSWORD: ${{ secrets.SOLUTIONS_PRIVATE_PYPI_PAT }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  check-doc-style:
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false ||
      github.event_name == 'push'
    name: Check documentation style
    runs-on: [ubuntu-latest]
    steps:
      - name: Check documentation style
        uses: Solution-Applications/actions/check-doc-style@v0.2.1
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  build-doc:
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false ||
      github.event_name == 'push'
    name: Build documentation
    runs-on: [ubuntu-latest]
    needs: [check-doc-style]
    steps:
      - name: Build documentation
        uses: Solution-Applications/actions/build-doc@v0.2.1
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}
          documentation-artifact: html-documentation
          dependencies-source: build-system

  deploy-doc:
    if: |
      github.event_name == 'push'
    name: Deploy documentation
    runs-on: [ubuntu-latest]
    needs: [build-doc]
    steps:
      - name: Deploy documentation
        uses: Solution-Applications/actions/deploy-doc@v0.2.1
        with:
          gh-token: ${{ secrets.WORKFLOW_TOKEN }}
          documentation-artifact: html-documentation
          cname: ${{ env.DOCUMENTATION_CNAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          render-last: 10
          short-version: false

  check-copyright:
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false 
    name: Check copyright
    runs-on: [ubuntu-latest]
    steps:
      - name: Check copyright
        uses: Solution-Applications/actions/check-copyright@v0.2.1
        with:
          gh-token: ${{ secrets.WORKFLOW_TOKEN }}

  check-code-style:
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false 
    name: Check code style
    runs-on: [ubuntu-latest]
    steps:
      - name: Check code style
        uses: Solution-Applications/actions/check-code-style@v0.2.1
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          tox-version: ${{ env.TOX_VERSION }}
          
  build:
    if: |
      github.event.pull_request.draft == false
    name: Build 
    runs-on: [windows-latest]
    steps:
      - name: Build
        uses: Solution-Applications/actions/build@v0.2.1
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}
          solutions-pypi-token: ${{ secrets.SOLUTIONS_PRIVATE_PYPI_PAT }}
          artifact-name: wheel
          run-in-venv: false
          dependencies-source: build-system
          retention-days: 7
          
  run-tests:
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false 
    name: Run tests
    runs-on: [windows-latest]
    strategy:
      matrix:
        python-version: ['3.7', '3.8']
      fail-fast: false
    steps:
      - name: Run tests
        uses: Solution-Applications/actions/run-tests@v0.2.1
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ env.POETRY_VERSION }}
          tox-version: ${{ env.TOX_VERSION }}
          check-coverage-ratio: false
          min-coverage-ratio: 80
          run-in-venv: true
          retention-days: 7

  release:
    if: |
      github.event_name == 'release'
    name: Release
    needs: [build]
    runs-on: [ubuntu-latest]
    steps:
      - name: Release
        uses: Solution-Applications/actions/release@v0.2.1
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          gh-token: ${{ secrets.WORKFLOW_TOKEN }}
          solutions-pypi-token: ${{ secrets.SOLUTIONS_PRIVATE_PYPI_PAT }}
          solutions-pypi-repository-url: https://pkgs.dev.azure.com/pyansys/_packaging/ansys-solutions/pypi/upload/
